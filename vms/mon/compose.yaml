services:
  influxdb:
    image: docker.io/library/influxdb:2.1
    container_name: influxdb
    networks:
      - gsa
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USERNAME:?}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD:?}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG:?}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET:?}
      INFLUXD_HTTP_BIND_ADDRESS: influxdb:8086
    healthcheck:
      test: wget --quiet --tries=1 --spider http://influxdb:8086
      interval: 5s
      timeout: 2s
      retries: 2
      start_period: 5s
  chronograf:
    image: docker.io/library/chronograf:1.9
    container_name: chronograf
    networks:
      - gsa
    volumes:
      - chronograf_data:/var/lib/chronograf
    environment:
      HOST: chronograf
      PORT: 8888
      INFLUXDB_URL: http://influxdb:8086
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: curl --fail --silent http://chronograf:8888
      interval: 5s
      timeout: 2s
      retries: 2
      start_period: 5s
  prometheus:
    image: quay.io/prometheus/prometheus:latest
    container_name: prometheus
    networks:
      - gsa
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    healthcheck:
      test: wget --quiet --tries=1 --spider http://prometheus:9090
      interval: 5s
      timeout: 2s
      retries: 2
      start_period: 5s
  grafana:
    image: docker.io/grafana/grafana:latest
    container_name: grafana
    networks:
      - gsa
    volumes:
      - grafana_storage:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/custom.ini:ro
    environment:
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
      GF_SECURITY_ADMIN_USER: ${GRAFANA_ADMIN_USER:?}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:?}
      GF_USERS_ALLOW_SIGN_UP: false
    healthcheck:
      test: wget --quiet --tries=1 --spider http://grafana:3000
      interval: 5s
      timeout: 2s
      retries: 2
      start_period: 5s
    depends_on:
      prometheus:
        condition: service_healthy
  caddy_monitoring:
    image: docker.io/library/caddy:2
    container_name: caddy_monitoring
    ports:
      - 2019:2019
      - 3000:3000
      - 8086:8086
      - 8888:8888
      - 9090:9090
    volumes:
      - ./monitoring.Caddyfile:/etc/caddy/Caddyfile
      - monitoring_caddy_data:/data
      - monitoring_caddy_config:/config
    environment:
      MONITORING_ADMIN_USER: ${MONITORING_ADMIN_USER}
      MONITORING_ADMIN_PASSWORD: ${MONITORING_ADMIN_PASSWORD}
    restart: unless-stopped
    healthcheck:
      test: wget --quiet --tries=1 --spider http://caddy_monitoring:8787
      interval: 5s
      timeout: 2s
      retries: 2
      start_period: 5s
    networks:
      - gsa
    depends_on:
      grafana:
        condition: service_healthy
      prometheus:
        condition: service_healthy
      chronograf:
        condition: service_healthy
      influxdb:
        condition: service_healthy
volumes:
  influxdb_data:
    name: influxdb_data
  influxdb_config:
    name: influxdb_config
  kapacitor_data:
    name: kapacitor_data
  chronograf_data:
    name: chronograf_data
  grafana_storage:
    name: grafana_storage
  prometheus_data:
    name: prometheus_data
  monitoring_caddy_data:
    name: monitoring_caddy_data
  monitoring_caddy_config:
    name: monitoring_caddy_config
networks:
  gsa:
    external: true
